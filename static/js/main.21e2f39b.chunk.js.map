{"version":3,"sources":["img/icon.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","className","src","icon","alt","href","target","rel","faTwitter","faGithubAlt","faAmazon","id","onClick","text","navigator","clipboard","writeText","document","querySelector","before","innerHTML","setTimeout","copyToClip","faDiscord","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kMAAe,G,YAAA,IAA0B,kC,6BC6G1BA,MAvGf,WACE,OAEE,qBAAKC,UAAU,yCAAf,SAEE,qBAAKA,UAAU,yCAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,WAE3C,qBAAKH,UAAU,cAAf,8BAEF,sBAAKA,UAAU,8CAAf,UAEE,8BACE,wBAAQA,UAAU,mCAAlB,SACE,mBAAGA,UAAU,yBAAyBI,KAAK,+BAA+BC,OAAO,SAASC,IAAI,sBAA9F,SACE,uBAAMN,UAAU,8BAAhB,UACE,sBAAMA,UAAU,OAAhB,SACE,cAAC,IAAD,CAAiBE,KAAMK,QAEzB,oDAMR,8BACE,wBAAQP,UAAU,mCAAlB,SACE,mBAAGA,UAAU,yBAAyBI,KAAK,kCAAkCC,OAAO,SAASC,IAAI,sBAAjG,SACE,uBAAMN,UAAU,YAAhB,UACE,sBAAMA,UAAU,OAAhB,SACE,cAAC,IAAD,CAAiBE,KAAMM,QAEzB,mDAMR,8BACE,wBAAQR,UAAU,sCAAlB,SACE,mBAAGA,UAAU,qBAAqBI,KAAK,mEAAmEC,OAAO,SAASC,IAAI,sBAA9H,SACE,uBAAMN,UAAU,YAAhB,UACE,sBAAMA,UAAU,OAAhB,SACE,cAAC,IAAD,CAAiBE,KAAMO,QAEzB,mDAMR,8BACE,wBAAQC,GAAG,UAAUV,UAAU,mCAAmCW,QAAS,kBAiC3F,SAAoBC,GAClBC,UAAUC,UAAUC,UAAUH,GAC9B,IAAMP,EAASW,SAASC,cAA2B,YAC7CC,EAASb,EAAQc,UACnBd,IACFA,EAAOc,UAAY,8CAGrBC,YAAW,WACLf,IACFA,EAAOc,UAAYD,KAChB,KA5CsFG,CAAW,kBAA1F,SACE,uBAAMrB,UAAU,YAAhB,UACE,sBAAMA,UAAU,OAAhB,SACE,cAAC,IAAD,CAAiBE,KAAMoB,QAEzB,kEAKN,8BACE,wBAAQtB,UAAU,mCAAlB,SACE,mBAAGA,UAAU,yBAAyBI,KAAK,gCAAgCC,OAAO,SAASC,IAAI,sBAA/F,SACE,uBAAMN,UAAU,YAAhB,UACE,sBAAMA,UAAU,OAAhB,SACE,cAAC,IAAD,CAAiBE,KAAMoB,QAEzB,wECjEPC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BZ,M","file":"static/js/main.21e2f39b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.1777ad68.png\";","import React from 'react';\nimport icon from './img/icon.png';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTwitter, faAmazon, faGithubAlt, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction App() {\n  return (\n\n    <div className=\" hero is-fullheight is-default is-bold\">\n\n      <div className=\"hero-body has-background-success-light\">\n        <div className=\"App-text container has-text-centered\">\n          <div className=\"columns is-vcentered\">\n            <div className=\"column is-7 \">\n              <figure className=\"image is-5by4\">\n                <img src={icon} className=\"App-logo\" alt=\"icon\" />\n              </figure>\n              <div className=\"title is-2 \">ID: Siberiy4 </div>\n            </div>\n            <div className=\"buttons are-medium column is-4 is-offset-1 \">\n\n              <div >\n                <button className=\"my-5 button is-info is-fullwidth\">\n                  <a className=\"has-text-warning-light\" href=\"https://twitter.com/siberiy4\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span className=\"icon-text has-text-centered\">\n                      <span className=\"icon\">\n                        <FontAwesomeIcon icon={faTwitter} />\n                      </span>\n                      <span>Twitter</span>\n                    </span>\n                  </a>\n                </button>\n              </div>\n\n              <div>\n                <button className=\"my-5 button is-dark is-fullwidth\">\n                  <a className=\"has-text-warning-light\" href=\"https://github.com/yo-kanyukari\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span className=\"icon-text\">\n                      <span className=\"icon\">\n                        <FontAwesomeIcon icon={faGithubAlt} />\n                      </span>\n                      <span>GitHub</span>\n                    </span>\n                  </a>\n                </button>\n              </div>\n\n              <div>\n                <button className=\"my-5 button is-warning is-fullwidth\">\n                  <a className=\"has-text-black-ter\" href=\"https://www.amazon.jp/hz/wishlist/ls/33THA53ST32R1?ref_=wl_share\" target=\"_blank\" rel=\"noopener noreferrer\" >\n                    <span className=\"icon-text\">\n                      <span className=\"icon\">\n                        <FontAwesomeIcon icon={faAmazon} />\n                      </span>\n                      <span>Amazon</span>\n                    </span>\n                  </a>\n                </button>\n              </div>\n\n              <div>\n                <button id=\"discord\" className=\"my-5 button is-link is-fullwidth\" onClick={()=>copyToClip(\"siberiy4#1380\")}>\n                  <span className=\"icon-text\">\n                    <span className=\"icon\">\n                      <FontAwesomeIcon icon={faDiscord} />\n                    </span>\n                    <span>Discord:  siberiy4#1380</span>\n                  </span>\n                </button>\n              </div>\n\n              <div>\n                <button className=\"my-5 button is-link is-fullwidth\">\n                  <a className=\"has-text-warning-light\" href=\"https://discord.gg/FJcnXtCHfm\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span className=\"icon-text\">\n                      <span className=\"icon\">\n                        <FontAwesomeIcon icon={faDiscord} />\n                      </span>\n                      <span>Discord Server</span>\n                    </span>\n                  </a>\n                </button>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\nfunction copyToClip(text: string) {\n  navigator.clipboard.writeText(text);\n  const target = document.querySelector<HTMLElement>('#discord');\n  const before = target!.innerHTML;\n  if (target) {\n    target.innerHTML = 'コピーしました';\n  }\n\n  setTimeout(() => {\n    if (target) {\n      target.innerHTML = before;\n    } }, 1000);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bulma/css/bulma.css\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}